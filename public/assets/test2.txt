
boolean d;
char p = 'A';

int[] f(boolean o, int g, boolean z)
{
    boolean b;
    int x;
    int[] a;
    {
      print("codigo de f");
      d = false;
      x = 9;
      a = new int[x];
    }
    return a;
}

int metodo()
{
    int x;
    {
      boolean y = true;
      print("codigo" + "de metodo");
      print x * 9;
    }
    return 8; 
}

int metodo2()
{
    return 2; 
}

class hola{
    int x;
    char y;
    string tira;
};

boolean k()
{
    boolean b;
    boolean r;
    int x;
    hola j;
    int[] a;
    {
      print("codigo de k...");
      x = 5;
      r = false;
      d = true;
      j = new hola();
      j.x = 10;                                    
      if ((x < 1) or (x == 1))
      { a = new int[x]; }
      else
      { a = new int[j.x]; }
    }
	
    a = f(true,10,false); 
    a = f(true,10,r);

    j.x = a[x];
    a[2] = 6;
    a[6] = 5;

    return d; 
}

boolean flag1 = k();

boolean complexFunction(boolean flag, int a, int[] list, char charater){
  print "in Complex Function";
  
  class classInFunction{
    string message;
  };
  classInFunction result = new classInFunction();

  if(a > list.length){
    result.message = "el numero en A es mayor a la logintud de la lista";
    flag = true;
  }else{
     result.message = "el numero en A es menor a la logintud de la lista";
    flag = false;
  }
  int metodo2Result = metodo2();
  print (metodo2Result);
  print (" ---- ---- ---");

  print result.message;
  return flag;
}


print complexFunction(flag1,5,new int[8],'a');